{
  "name": "Python 3",
  "image": "mcr.microsoft.com/devcontainers/python:3.10",
  // "build": {
  //   "dockerfile": "Dockerfile"
  // },
  "features": {
    "ghcr.io/devcontainers-contrib/features/black:1": {},
    "ghcr.io/devcontainers/features/node:1": {},
	"ghcr.io/devcontainers/features/docker-in-docker:2": {"moby":false},
	"ghcr.io/eitsupi/devcontainer-features/duckdb-cli:1": {
		"version": "0.10.1",
		"extensions": "parquet"
	},
	"ghcr.io/eitsupi/devcontainer-features/go-task:1": {}
  },
  // Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "task setup",
  // cant get evidence to start in seperate process yet! cuyrrently stops when running dagit
  // "postCreateCommand": "task setup && task dag && task evidence_setup && task evidence ",
  // "postCreateCommand": "task setup",
  "postCreateCommand": "bash ./.devcontainer/postCreateCommand.sh && . .venv/bin/activate &&  task setup",
  // "postStartCommand": ". .venv/bin/activate", // runs after postCreateCommand
  "postAttachCommand": ". .venv/bin/activate && task dag", // runs after postStartCommand
  // "runArgs": [
  //   "--env-file", "${localWorkspaceFolder}/.env.dev"
  //   ],
  // "secrets": {
  //   "MOTHERDUCK_TOKEN": {
  //     "description": "used for production data warehouse",
  //     // "documentationUrl": ""
  //   },
  //   "DATAFOLD_APIKEY": {
  //     "description": "used for cicd",
  //     // "documentationUrl": ""
  //   },
  //   "AWS_ROLE_TO_ASSUME": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   },
  //   "S3_BUCKET_METADATA": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   },
  //   "DESTINATION__DUCKDB__CREDENTIALS": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   },
  //   "SOURCES__GITHUB__ACCESS_TOKEN": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   },
  //   "SOURCES__GOOGLE_ANALYTICS__CREDENTIALS__PROJECT_ID": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   },
  //   "SOURCES__GOOGLE_ANALYTICS__CREDENTIALS__CLIENT_EMAIL": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   },
  //   "SOURCES__GOOGLE_ANALYTICS__CREDENTIALS__PRIVATE_KEY": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   },
  //   "SOURCES__GOOGLE_ANALYTICS__PROPERTY_ID": {
  //     "description": "used for dbt defer for storing manifest",
  //     // "documentationUrl": ""
  //   }
  // },

	"containerEnv": {
		// use a .env file outside of source control to store secrets or via repo secrets
    "PYTHONPATH": "/workspaces/nsw-doe-data-stack-in-a-box/orchestration",
    "GITHUB_WORKSPACE":                 "/workspaces/nsw-doe-data-stack-in-a-box",
    "NSW_DOE_DATA_STACK_IN_A_BOX__ENV": "dev",
    "NSW_DOE_DATA_STACK_IN_A_BOX_DAGSTER_PROJECT_DIR":  "orchestration",
    "NSW_DOE_DATA_STACK_IN_A_BOX_DBT_PROJECT_DIR": "transformation/transformation_nsw_doe",

    "NSW_DOE_DATA_STACK_IN_A_BOX_DB_PATH_AND_DB": "reports/sources/nsw_doe_data_stack_in_a_box/nsw_doe_data_stack_in_a_box__dev.duckdb",
    "NSW_DOE_DATA_STACK_IN_A_BOX_DB_NAME": "nsw_doe_data_stack_in_a_box__dev",
    "NSW_DOE_DATA_STACK_IN_A_BOX_TARGET_SCHEMA": "analytics",

    "TPCH__ENV":   "dev",
    "TPCH_DBT_PROJECT_DIR":  "transformation/demo_transformation_scaling_tpch",
    "TPCH_DB_PATH":  "reports/sources/demo_tpch__dev",
    "TPCH_DB_PATH_AND_DB":   "reports/sources/demo_tpch__dev/demo_tpch__dev.duckdb",
    "TPCH_DB_NAME":  "demo_tpch__dev",
    "TPCH_TARGET_SCHEMA":  "analytics",

    "DESTINATION__DUCKDB__CREDENTIALS": "duckdb:///////workspaces/nsw-doe-data-stack-in-a-box/reports/sources/nsw_doe_data_stack_in_a_box/nsw_doe_data_stack_in_a_box__dev.duckdb",

    "DAGSTER_HOME": "orchestration/dagster-local-file-store",

    "EVIDENCE_SOURCE__nsw_doe_data_stack_in_a_box__filename": "nsw_doe_data_stack_in_a_box__dev.duckdb",

    "NODE_OPTIONS":"--max-old-space-size=8192"

	},
	"remoteEnv": {
		// "DATABASE": "duckdb",
		// "FILENAME": "jaffle_shop.duckdb"
	},
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh"
      },
      "extensions": [
        "GitHub.codespaces",
        "GitHub.vscode-pull-request-github",
        "esbenp.prettier-vscode",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "charliermarsh.ruff",
        "redhat.vscode-yaml",
        "samuelcolvin.jinjahtml",
        "bungcip.better-toml",
        "tamasfe.even-better-toml",
        "dorzey.vscode-sqlfluff",
        "mechatroner.rainbow-csv",
        "evidence.evidence-vscode",
        "svelte.svelte-vscode",
        "GitHub.copilot",
        "GitHub.copilot-labs",
        "innoverio.vscode-dbt-power-user",
        "bastienboutonnet.vscode-dbt",
        "Evidence.sqltools-duckdb-driver",
        "Evidence.evidence-vscode",
        "ms-toolsai.datawrangler",
        "GitHub.vscode-github-actions"
      ]
    }
  }
}
// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
